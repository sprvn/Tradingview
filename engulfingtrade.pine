// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© sprrw

//@version=4
study("Engulfing Candles + EMA 50", overlay = true)
//strategy("Engulfing Candles") //keep this commented out unless backtesting


// #########################
// #   SSL Channel Begin   #
// #########################

sslLen=input(title="Period", defval=10)
sslChanPlot = input(title="Plot SSL Channel", type=input.bool, defval=true)

smaHighOrig = sma(high, sslLen)
smaLowOrig = sma(low, sslLen)

smaHigh = security(syminfo.tickerid, "60", smaHighOrig)
smaLow = security(syminfo.tickerid, "60", smaLowOrig)

int Hlv = na
Hlv := close > smaHigh ? 1 : close < smaLow ? -1 : Hlv[1]
sslDown = Hlv < 0 ? smaHigh: smaLow
sslUp   = Hlv < 0 ? smaLow : smaHigh

plot(sslChanPlot ? sslDown : na, title="SSL Down", linewidth=2, color=color.red)
plot(sslChanPlot ? sslUp : na, title="SSL Up", linewidth=2, color=color.lime)

bull = if sslUp > sslDown
    1 // Bull set to 1 (true) if it is a bull market
else
    0 // Bull set to 0 (false) if it is a bear market
    
// #########################
// #    SSL Channel End    #
// #########################

// #########################
// #     EMA 50 Begin      #
// #########################

len = input(50, minval=1, title="Length")
src = input(close, title="Source")
offset = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500)
ema50 = ema(src, len)
plot(ema50, title="EMA", color=color.blue, offset=offset)

// #########################
// #      EMA 50 End       #
// #########################


// #########################
// #    Engulfing Begin    #
// #########################

openBarPrevious = open[1]
closeBarPrevious = close[1]
openBarCurrent = open
closeBarCurrent = close

//If current bar open is less than equal to the previous bar close AND current bar open is less than previous bar open AND current bar close is greater than previous bar open THEN True
bullishEngulfing = (openBarCurrent <= closeBarPrevious) and (openBarCurrent < openBarPrevious) and (closeBarCurrent > openBarPrevious)
//If current bar open is greater than equal to previous bar close AND current bar open is greater than previous bar open AND current bar close is less than previous bar open THEN True
bearishEngulfing = (openBarCurrent >= closeBarPrevious) and (openBarCurrent > openBarPrevious) and (closeBarCurrent < openBarPrevious)

//bullishEngulfing/bearishEngulfing return a value of 1 or 0; if 1 then plot on chart, if 0 then don't plot
plotshape(bullishEngulfing, style = shape.triangleup, location = location.belowbar, color = color.green, size = size.tiny)
plotshape(bearishEngulfing, style = shape.triangledown , location = location.abovebar, color = color.red, size = size.tiny)

alertcondition(bullishEngulfing, title = "Bullish Engulfing", message = "[CurrencyPair] [TimeFrame], Bullish candle engulfing previous candle")
alertcondition(bearishEngulfing, title = "Bearish Engulfing", message = "[CurrencyPair] [TimeFrame], Bearish candle engulfing previous candle")

//================================BACKTEST================================//

// === INPUT BACKTEST RANGE === 
FromMonth = input(defval = 1, title = "From Month", minval = 1, maxval = 12) 
FromDay = input(defval = 1, title = "From Day", minval = 1, maxval = 31) 
FromYear = input(defval = 2017, title = "From Year", minval = 2017) 
ToMonth = input(defval = 1, title = "To Month", minval = 1, maxval = 12) 
ToDay = input(defval = 1, title = "To Day", minval = 1, maxval = 31) 
ToYear = input(defval = 9999, title = "To Year", minval = 2017) 

// === FUNCTION EXAMPLE === 
start = timestamp(FromYear, FromMonth, FromDay, 00, 00) // backtest start window 
finish = timestamp(ToYear, ToMonth, ToDay, 23, 59) // backtest finish window 
window() => time >= start and time <= finish ? true : false // create function "within window of time" 

// === EXECUTION === //Keep this commented out unless backtesting
// strategy.entry("L", strategy.long, 25000, when = bullishEngulfing == 1 and window()) // buy long when "within window of time" AND crossover 
// strategy.exit("exit", "L", profit = 1000, loss = 50)

// strategy.entry("S", strategy.short, 25000, when = bearishEngulfing == 1 and window()) // buy long when "within window of time" AND crossover 
// strategy.exit("exit", "S", profit = 1000, loss = 50)

// #########################
// #     Engulfing End     #
// #########################

